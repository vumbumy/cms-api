openapi: 3.0.0
info:
  title: Group
  version: "1.0.0"
tags:
  - name: Organization
    description: 조직 관리
  - name: Group
    description: 사용자 그룹 관리
  - name: Project
    description: 프로젝트 관리
paths:
  /orgs:
    post:
      tags:
        - Organization
      responses:
        '200':
          description: OK
    put:
      tags:
        - Organization
      responses:
        '200':
          description: OK
    get:
      tags:
        - Organization
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
    delete:
      tags:
        - Organization
      responses:
        '200':
          description: OK
  /orgs/{orgNo}:
    get:
      tags:
        - Organization
      parameters:
        - $ref: '#/components/parameters/orgNo'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
#  /orgs/{orgNo}/permissions:
#    put:
#      tags:
#        - Organization
#      parameters:
#        - $ref: '#/components/parameters/orgNo'
#      responses:
#        '200':
#          description: OK
  /groups:
    post:
      tags:
        - Group
      responses:
        '200':
          description: OK
    put:
      tags:
        - Group
      responses:
        '200':
          description: OK
    get:
      tags:
        - Group
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
    delete:
      tags:
        - Group
      responses:
        '200':
          description: OK
  /groups/{groupNo}:
    get:
      tags:
        - Group
      parameters:
        - $ref: '#/components/parameters/groupNo'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
#  /groups/{groupNo}/permissions:
#    put:
#      tags:
#        - Group
#      responses:
#        '200':
#          description: OK
  /projects:
    post:
      tags:
        - Project
      responses:
        '200':
          description: OK
    put:
      tags:
        - Project
      responses:
        '200':
          description: OK
    get:
      tags:
        - Project
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
    delete:
      tags:
        - Project
      responses:
        '200':
          description: OK
  /projects/{projectNo}:
    get:
      tags:
        - Project
      parameters:
        - $ref: '#/components/parameters/projectNo'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
#  /projects/{projectNo}/permissions:
#    put:
#      tags:
#        - Project
#      parameters:
#        - $ref: '#/components/parameters/projectNo'
#      responses:
#        '200':
#          description: OK

components:
  schemas:
    User:
      type: object
      properties:
        email:
          type: string
          example: "test@example.com"
        mobile:
          type: string
          example: "01012345678"
    Permission:
      type: object
      properties:
        userNo:
          type: integer
          example: 11
        groupNo:
          type: integer
          example: 202
        accessRight:
          type: string
          example: "WRITE"
      discriminator:
        propertyName: pet_type
    Organization:
      type: object
      properties:
        orgName:
          type: string
          example: "Org Corp"
    Group:
      type: object
      properties:
        groupName:
          type: string
          example: "Group A"
        userList:
          type: array
          items:
            $ref: '#/components/schemas/User'
    Project:
      type: object
      properties:
        groupName:
          type: string
          example: "Project X"
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permission'

  parameters:
    hashCode:
      name: code
      description: 8 characters hash
      in: query
      schema:
        type: string
      example: 3106cdf2
    userNo:
      required: true
      name: userNo
      in: path
      schema:
        type: integer
        example: 11
    orgNo:
      required: true
      name: orgNo
      in: path
      schema:
        type: integer
        example: 40004
    groupNo:
      required: true
      name: groupNo
      in: path
      schema:
        type: integer
        example: 202
    projectNo:
      required: true
      name: projectNo
      in: path
      schema:
        type: integer
        example: 3003
